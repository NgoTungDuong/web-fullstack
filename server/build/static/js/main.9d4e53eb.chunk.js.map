{"version":3,"sources":["components/Pagination.jsx","components/Header.jsx","container/MainScreen.jsx","components/HomeScreen.jsx","components/CreatePost.jsx","container/DetailScreen.jsx","App.js","serviceWorker.js","index.js"],"names":["Pagination","className","aria-label","aria-hidden","this","props","myArray","map","item","key","pageNumber","onClick","handlePaginationClick","Component","Header","handleKeyPress","e","submitForm","login","charCode","Navbar","color","Row","Input","type","name","placeholder","Button","outline","localStorage","length","href","NavbarBrand","authUser","userId","style","display","firstName","lastName","marginLeft","logOut","marginRight","toggleLogin","toggleRegister","Modal","isOpen","loginModalVisible","toggle","ModalBody","Form","onKeyPress","marginBottom","textAlign","value","username","onChange","loginInfoChange","target","marginTop","password","justifyContent","loginWithFacebook","registerModalVisible","registerUsername","registerInfoChange","registerPassword","registerConfirmPassword","confirmPassword","register","Homescreen","state","loginInfo","registerInfo","setState","newLoginInfo","newRegisterInfo","registerSubmit","a","console","log","window","alert","fetch","method","headers","body","JSON","stringify","then","res","json","result","success","message","loginSubmit","credentials","setItem","id","location","facebookProvider","firebase","auth","FacebookAuthProvider","app","initializeApp","signInWithPopup","user","getIdToken","idToken","additionalUserInfo","profile","first_name","last_name","clear","getItem","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","HomeScreen","pageSize","data","total","event","Number","innerText","catch","error","i","Math","ceil","push","_id","to","src","imageUrl","alt","title","backgroundColor","content","CreatePost","imageFile","undefined","imageSrc","description","errorMassage","handleImageChange","files","fileReader","FileReader","readAsDataURL","onloadend","currentTarget","handleTitleChange","handleContentChange","handleDescriptionChange","handleFormSubmit","preventDefault","formData","FormData","append","massage","uploadImage","createPost","onSubmit","position","top","accept","margin","textIndent","zIndex","height","width","rows","role","DetailScreen","image","handleBack","history","back","_isMounted","match","params","imageId","App","exact","path","component","MainScreen","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9d4e53eb.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Pagination extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav className='mt-5' aria-label=\"Page navigation example\">\r\n                    <ul className=\"pagination justify-content-center\">\r\n                        <li className=\"page-item\">\r\n                            <a className=\"page-link\" aria-label=\"Previous\">\r\n                                <span aria-hidden=\"true\">&laquo;</span>\r\n                            </a>\r\n                        </li>\r\n                        {this.props.myArray.map((item) => {\r\n                            return (\r\n                                <li key={item} className={this.props.pageNumber === item + 1 ? \"page-item active\" : \"page-item\"}>\r\n                                    <a className=\"page-link\" onClick={this.props.handlePaginationClick}>{item + 1}</a>\r\n                                </li>\r\n                            );\r\n                        })}\r\n                        <li className=\"page-item\">\r\n                            <a className=\"page-link\" aria-label=\"Next\">\r\n                                <span aria-hidden=\"true\">&raquo;</span>\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Navbar, NavbarBrand, Input, Button, Modal, ModalBody, Form, Row } from 'reactstrap';\r\nimport './Header.css';\r\n\r\nexport default class Header extends Component {\r\n\r\n    handleKeyPress = (e) => {\r\n        const submitForm = this.props.login.submitForm;\r\n        if (e.charCode === 13) {\r\n            submitForm();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Navbar color='light' className='header-container'>\r\n                <Row className='ml-2'>\r\n                    <Input className='search' type='text' name='search-title' placeholder='Enter your search' />\r\n                    <Button outline color='success' className='mr-2 ml-2' >Search</Button>\r\n                    {localStorage.length !== 0 ? (\r\n                        <a className='btn btn-outline-info' href='/create-post'>+ New Post</a>\r\n                    ) : (\r\n                        <a className='btn btn-outline-info' href='/'>+ New Post</a>\r\n                    )}\r\n                </Row>\r\n                {localStorage.length !== 0 ? (\r\n                    <NavbarBrand href=\"/homescreen\">Techkids Hotgirl</NavbarBrand>\r\n                ): (\r\n                    <NavbarBrand href=\"/\">Techkids Hotgirl</NavbarBrand>\r\n                )}\r\n\r\n                {this.props.authUser.userId ? (\r\n                    <div>\r\n                        <strong>Welcome</strong>, <p style={{ color: \"blue\", display: \"inline\" }}>{this.props.authUser.firstName} {this.props.authUser.lastName}</p>\r\n                        <Button style={{ marginLeft: \"20px\" }} color=\"danger\" onClick={this.props.logOut}>Log Out</Button>\r\n                    </div>\r\n                ) : (\r\n                    <div>\r\n                        <Button style={{ marginRight: '10px' }} color='primary' onClick={this.props.login.toggleLogin}>Login</Button>\r\n                        <Button color='danger' onClick={this.props.login.toggleRegister}>Register</Button>\r\n                    </div>\r\n                    )}\r\n\r\n                <Modal className='login-modal' isOpen={this.props.loginModalVisible} toggle={this.props.login.toggleLogin}>\r\n                    <ModalBody>\r\n                        <Form onKeyPress={this.handleKeyPress}>\r\n                            <h2 style={{ marginBottom: \"20px\", color: \"green\", textAlign: \"center\" }}>LOGIN WITH US</h2>\r\n\r\n                            <Input\r\n                                type='text'\r\n                                placeholder='Username'\r\n                                value={this.props.login.username}\r\n                                onChange={(e) => this.props.login.loginInfoChange({ username: e.target.value })}\r\n                            />\r\n\r\n                            <Input\r\n                                style={{ marginBottom: \"20px\", marginTop: \"15px\" }}\r\n                                type='password'\r\n                                placeholder='Password'\r\n                                value={this.props.login.password}\r\n                                onChange={(e) => this.props.login.loginInfoChange({ password: e.target.value })}\r\n                            />\r\n                            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                                <Button color='warning' style={{ marginRight: \"20px\" }} onClick={this.props.login.submitForm}>LOGIN</Button>\r\n                                <Button color='primary' onClick={this.props.login.loginWithFacebook}>Continue with FaceBook</Button>\r\n                            </div>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n                \r\n                <Modal isOpen={this.props.registerModalVisible} toggle={this.props.login.toggleRegister}>\r\n                    <ModalBody>\r\n                        <Form>\r\n                            <h2 style={{ marginBottom: \"20px\", color: \"green\", textAlign: \"center\" }}>REGISTER FOR ENJOY</h2>\r\n\r\n                            <Input\r\n                                //username\r\n                                type='text'\r\n                                placeholder='Enter Username'\r\n                                value={this.props.login.registerUsername}\r\n                                onChange={(e) => this.props.login.registerInfoChange({ username: e.target.value })}\r\n                            />\r\n\r\n                            <Input\r\n                                //password\r\n                                style={{ marginTop: \"10px\", marginBottom: \"10px\" }}\r\n                                type='text'\r\n                                placeholder='Enter Password'\r\n                                value={this.props.login.registerPassword}\r\n                                onChange={(e) => this.props.login.registerInfoChange({ password: e.target.value })}\r\n                            />\r\n\r\n                            <Input\r\n                                //nhap lai password\r\n                                type='text'\r\n                                placeholder='Confirm Password'\r\n                                value={this.props.login.registerConfirmPassword}\r\n                                onChange={(e) => this.props.login.registerInfoChange({ confirmPassword: e.target.value })}\r\n                            />\r\n\r\n                            <Input\r\n                                //firstname\r\n                                style={{ marginTop: \"10px\", marginBottom: \"10px\" }}\r\n                                type='text'\r\n                                placeholder='Enter Your Firstname'\r\n                                value={this.props.login.firstName}\r\n                                onChange={(e) => this.props.login.registerInfoChange({ firstName: e.target.value })}\r\n                            />\r\n\r\n                            <Input\r\n                                //lastname\r\n                                type='text'\r\n                                placeholder='Enter Your LastName'\r\n                                value={this.props.login.lastName}\r\n                                onChange={(e) => this.props.login.registerInfoChange({ lastName: e.target.value })}\r\n                            />\r\n                            <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n                                <Button\r\n                                    style={{ marginTop: \"20px\" }}\r\n                                    color=\"danger\"\r\n                                    onClick={this.props.login.register}\r\n                                >REGISTER</Button>\r\n                            </div>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport Header from '../components/Header';  \r\nimport firebase from 'firebase';\r\n\r\nexport default class Homescreen extends Component {\r\n    \r\n\r\n    state = {\r\n        loginModalVisible: false,\r\n        registerModalVisible: false,\r\n        loginInfo: {\r\n            username: '',\r\n            password: '',\r\n        },\r\n        registerInfo: {\r\n            username: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            firstName: '',\r\n            lastName: '',\r\n        },\r\n        authUser: {},\r\n    };\r\n\r\n    componentDidMount() {\r\n        localStorage.getItem('userId');\r\n        if (!firebase.app.length) {\r\n            firebase.initializeApp({\r\n                apiKey: \"AIzaSyBCGCCl1KHrGpMZjdRQfoeMiQ3VEfStnjc\",\r\n                authDomain: \"techkids-hotgirl-2ab39.firebaseapp.com\",\r\n                databaseURL: \"https://techkids-hotgirl-2ab39.firebaseio.com\",\r\n                projectId: \"techkids-hotgirl-2ab39\",\r\n                storageBucket: \"techkids-hotgirl-2ab39.appspot.com\",\r\n                messagingSenderId: \"784084319356\",\r\n            });\r\n        }\r\n        const userId = localStorage.getItem('userId');\r\n        const firstName = localStorage.getItem('firstName');\r\n        const lastName = localStorage.getItem('lastName');\r\n        this.setState({\r\n            authUser: {\r\n                userId,\r\n                firstName,\r\n                lastName,\r\n            }\r\n        });\r\n    }\r\n\r\n    toggleLogin = () => {\r\n        this.setState({\r\n            loginModalVisible: !this.state.loginModalVisible,\r\n        });\r\n    };\r\n\r\n    toggleRegister = () => {\r\n        this.setState({\r\n            registerModalVisible: !this.state.registerModalVisible,\r\n        });\r\n    };\r\n\r\n    loginInfoChange = (newLoginInfo) => {\r\n        this.setState({\r\n            loginInfo: {\r\n                ...this.state.loginInfo,\r\n                ...newLoginInfo,\r\n            }\r\n        });\r\n    };\r\n\r\n    registerInfoChange = (newRegisterInfo) => {\r\n        this.setState({\r\n            registerInfo: {\r\n                ...this.state.registerInfo,\r\n                ...newRegisterInfo\r\n            }\r\n        });\r\n        \r\n    };\r\n\r\n\r\n    registerSubmit = async () => {\r\n        console.log(this.state.registerInfo)\r\n        // Validate form\r\n        if (this.state.registerInfo.password !== this.state.registerInfo.confirmPassword) {\r\n            window.alert('Password does not match');\r\n        } else {\r\n            // fetch to api server\r\n            try {\r\n                const result = await fetch(`http://localhost:3001/api/auth/register`, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(this.state.registerInfo),\r\n                }).then((res) => res.json());\r\n                // success => update UI\r\n                if (!result.success) {\r\n                    window.alert(result.message)    \r\n                } else {\r\n                    window.alert(result.message);\r\n                    this.toggleRegister();\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n                window.alert(error);\r\n            }\r\n        }\r\n    };\r\n\r\n    loginSubmit = async() => {\r\n        // Validate form\r\n        if (!this.state.loginInfo.username || !this.state.loginInfo.password) {\r\n            window.alert('Please input username and password');\r\n        } else {\r\n            // fetch to api server\r\n            try {\r\n                const result = await fetch(`http://localhost:3001/api/auth/login`, {\r\n                    method: 'POST',\r\n                    credentials: 'include',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(this.state.loginInfo),\r\n\r\n                }).then((res) => res.json());\r\n                console.log(result);\r\n                // success => update UI\r\n                if (!result.success) {\r\n                    window.alert(result.message);\r\n                    this.setState({\r\n                        loginInfo: {\r\n                           ...this.state.loginInfo,\r\n                           password: '',\r\n                        }\r\n                    })\r\n                } else {\r\n                    console.log(result);\r\n                    window.alert(result.message);\r\n                    window.localStorage.setItem('userId', result.id);\r\n                    window.localStorage.setItem('username', result.username);\r\n                    window.localStorage.setItem('firstName', result.firstName);\r\n                    window.localStorage.setItem('lastName', result.lastName);\r\n                    window.location.href = '/homescreen';\r\n                    this.toggleLogin();\r\n                    this.setState({\r\n                        authUser: {\r\n                            userId: result.id,\r\n                            firstName: result.firstName,\r\n                            lastName: result.lastName,\r\n                        }\r\n                    });\r\n                    this.setState({\r\n                        loginInfo: {\r\n                            username: '',\r\n                            password: '',\r\n                        }\r\n                    });\r\n                    \r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n                window.alert(error);\r\n            }\r\n        }\r\n    };\r\n\r\n    loginWithFacebook = async() => {\r\n        try {\r\n            const facebookProvider = new firebase.auth.FacebookAuthProvider();\r\n            if (!firebase.app.length) {\r\n                firebase.initializeApp({})\r\n            }\r\n            const result = await firebase.auth().signInWithPopup(facebookProvider);\r\n            const idToken = await result.user.getIdToken();\r\n            console.log(result);\r\n            console.log(idToken);\r\n            // const verifyTokenResult = await fetch(`http://localhost:3001/api/auth/facebookOauth`, {\r\n            //   method: 'POST',\r\n            //   headers: {\r\n            //     'Content-Type': 'application/json',\r\n            //   },\r\n            //   body: JSON.stringify({\r\n            //     idToken,\r\n            //   })\r\n            // }).then((res) => res.json());\r\n            // console.log(verifyTokenResult);\r\n\r\n            window.alert('Dang nhap thanh cong');\r\n            window.localStorage.setItem('userId', result.additionalUserInfo.profile.id);\r\n            window.localStorage.setItem('username', result.additionalUserInfo.profile.name);\r\n            window.localStorage.setItem('firstName', result.additionalUserInfo.profile.first_name);\r\n            window.localStorage.setItem('lastName', result.additionalUserInfo.profile.last_name);\r\n            this.toggleLogin();\r\n            this.setState({\r\n                authUser: {\r\n                    userId: result.additionalUserInfo.profile.id,\r\n                    firstName: result.additionalUserInfo.profile.first_name,\r\n                    lastName: result.additionalUserInfo.profile.last_name,\r\n                }\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    logOut = async() => {\r\n        window.localStorage.clear();\r\n        window.location.href = '/';\r\n        this.setState({\r\n            authUser: {}\r\n        });\r\n        const result = await fetch(`http://localhost:3001/api/auth/logout`, {\r\n            credentials: 'include',\r\n            method: \"GET\",\r\n        }).then((res) => res.json());\r\n        console.log(result);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header\r\n                    loginModalVisible = { this.state.loginModalVisible }\r\n                    registerModalVisible = { this.state.registerModalVisible }\r\n                    login = {\r\n                        {\r\n                            username: this.state.loginInfo.username,\r\n                            password: this.state.loginInfo.password,\r\n                            registerUsername: this.state.registerInfo.username,\r\n                            registerPassword: this.state.registerInfo.password,\r\n                            registerConfirmPassword: this.state.registerInfo.confirmPassword,\r\n                            firstName: this.state.registerInfo.firstName,\r\n                            lastName: this.state.registerInfo.lastName,\r\n                            toggleLogin: this.toggleLogin,\r\n                            submitForm: this.loginSubmit,\r\n                            register: this.registerSubmit,\r\n                            registerInfoChange: this.registerInfoChange,\r\n                            loginInfoChange: this.loginInfoChange,\r\n                            loginWithFacebook: this.loginWithFacebook,\r\n                            toggleRegister: this.toggleRegister,\r\n                        }\r\n                    }\r\n                    authUser = { this.state.authUser }\r\n                    logOut = { this.logOut }\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Pagination from './Pagination';\r\nimport Homescreen from '../container/MainScreen';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class HomeScreen extends Component {\r\n    // componentDidMount() {\r\n    //     fetch(`http://localhost:3001/api/users`,{\r\n    //         credentials: 'include',\r\n    //         headers: {\r\n    //             'Acept': 'application/json',\r\n    //             'Content-Type': 'application/json'\r\n    //         },\r\n    //         method: 'GET',\r\n    //     })\r\n    // }\r\n\r\n    state = {\r\n        pageNumber: 1,\r\n        pageSize: 4,\r\n        data: [],\r\n        total: 0,\r\n    }\r\n\r\n    componentDidMount() {\r\n        localStorage.getItem('userId');\r\n        localStorage.getItem('username');\r\n        this.setState({\r\n            pageNumber: localStorage.pageNumber,\r\n        })\r\n        // fetch posts\r\n        if (!localStorage.pageNumber) {\r\n            fetch(`http://localhost:3001/api/posts?pageNumber=${this.state.pageNumber}&pageSize=${this.state.pageSize}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                credentials: 'include'\r\n            })\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    this.setState({\r\n                        data: data.data,\r\n                        total: data.total\r\n                    })\r\n                })\r\n        } else {\r\n            fetch(`http://localhost:3001/api/posts?pageNumber=${localStorage.pageNumber}&pageSize=${localStorage.pageSize}`,{\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                credentials: 'include'\r\n            })\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    console.log(data);\r\n                    this.setState({\r\n                        data: data.data,\r\n                        total: data.total,\r\n                    })\r\n                })\r\n                .catch((error) => console.log(error))\r\n        }\r\n    }\r\n\r\n    handlePaginationClick = (event) => {\r\n        // setState pageNumber\r\n        this.setState({\r\n            pageNumber: Number(event.target.innerText),\r\n        });\r\n        // fetch new data\r\n        fetch(`http://localhost:3001/api/posts?pageNumber=${event.target.innerText}&pageSize=${this.state.pageSize}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application'\r\n            },\r\n            credentials: 'include'\r\n        })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                console.log(data);\r\n                this.setState({\r\n                    data: data.data,\r\n                    total: data.total,\r\n                    \r\n                });\r\n                localStorage.setItem('pageNumber', this.state.pageNumber);\r\n                localStorage.setItem('pageSize', this.state.pageSize);\r\n            })\r\n            .catch((error) => console.log(error))\r\n    }   \r\n\r\n    render() {\r\n        const myArray = [];\r\n        for (let i = 0; i < Math.ceil(this.state.total / this.state.pageSize); i++) {\r\n            myArray.push(i);\r\n        }\r\n        return (\r\n            localStorage.length !== 0 ? (\r\n                <div>\r\n                    <Homescreen/>\r\n                    <div className='container'>\r\n                        <div className=\"row\">\r\n                            {this.state.data.map((item) => {\r\n                                return (\r\n                                    // <div className=\"card mt-5\" key={item._id}>\r\n                                    //     {/* <div \r\n                                    //         className=\"card-img-top\"\r\n                                    //         style={{\r\n                                    //             backgroundImage: `url(${item.imageUrl})`,\r\n                                    //             height: '400px',\r\n                                    //             backgroundRepeat: 'no-repeat',\r\n                                    //             backgroundSize: 'cover',\r\n                                    //             backgroundPositionX: 'left'\r\n                                    //         }}\r\n                                    //     >\r\n                                    //     </div> */}\r\n                                    //     <img src={item.imageUrl} className=\"mx-auto d-block\" />\r\n                                    //     <div className=\"card-body\">\r\n                                    //         <p className=\"card-text\">{item.content}</p>\r\n                                    //     </div>\r\n                                    // </div>\r\n                                    <div className=\"col-3 mt-5 mb-5\" key={item._id}>\r\n                                        <Link to={`/images/${item._id}`}>\r\n                                            <img\r\n                                                className='img-fluid'\r\n                                                src={item.imageUrl}\r\n                                                alt={item.title}\r\n                                            />\r\n                                        </Link>\r\n                                        <div style={{textAlign: 'center', backgroundColor: '#f5f5f5'}}>\r\n                                            <h4>{item.title}</h4>\r\n                                            <p>{item.content}</p>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                );\r\n                            })}\r\n                        </div>\r\n                        <Pagination \r\n                            myArray={myArray}\r\n                            pageNumber={Number(this.state.pageNumber)}\r\n                            handlePaginationClick={this.handlePaginationClick}\r\n\r\n                        />\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                window.location.href = '/'\r\n            )\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport Homescreen from '../container/MainScreen';\r\n\r\nexport default class CreatePost extends Component {\r\n\r\n    componentDidMount() {\r\n        localStorage.getItem('userId');\r\n        localStorage.getItem('username');\r\n    }\r\n\r\n    state = {\r\n        imageFile: undefined,\r\n        imageSrc: '',\r\n        title: '',\r\n        content: '',\r\n        description: '',\r\n        errorMassage: ''\r\n    };\r\n\r\n    handleImageChange = (event) => {\r\n        const imageFile = event.target.files[0];\r\n        if (imageFile) {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsDataURL(imageFile);\r\n            fileReader.onloadend = (data) => {\r\n                this.setState({\r\n                    imageFile: imageFile,\r\n                    imageSrc: data.currentTarget.result\r\n                });\r\n            };\r\n        };\r\n        // console.log(imageFile)\r\n    };\r\n\r\n    handleTitleChange = (event) => {\r\n        this.setState({\r\n            title: event.target.value,\r\n        });\r\n    };\r\n\r\n    handleContentChange = (event) => {\r\n        this.setState({\r\n            content: event.target.value,\r\n        });\r\n    };\r\n\r\n    handleDescriptionChange = (event) => {\r\n        this.setState({\r\n            description: event.target.value,\r\n        });\r\n    };\r\n\r\n    handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (!this.state.imageFile || !this.state.title || !this.state.content || !this.state.description) {\r\n            this.setState({\r\n                errorMassage: 'Please input full infomation !!!'\r\n            });\r\n        } else {\r\n            // Upload Image\r\n            const formData = new FormData();\r\n            formData.append('image', this.state.imageFile);\r\n            const uploadImage = await fetch(`http://localhost:3001/uploads/image`, {\r\n                method: 'POST',\r\n                credentials: 'include',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    // 'Content-Type': 'multipart/form-data',\r\n                },\r\n                body: formData,\r\n            })\r\n                .then((res) => res.json())\r\n                .then((data) => console.log(data))\r\n                .catch((error) => {\r\n                    this.setState({\r\n                        errorMassage: error.massage,\r\n                    });\r\n                });\r\n            console.log(uploadImage);\r\n            // Create Post\r\n            const createPost = await fetch(`http://localhost:3001/api/posts`, {\r\n                method: 'POST',\r\n                credentials: 'include',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    title: this.state.title,\r\n                    content: this.state.content,\r\n                    description: this.state.description,\r\n                    imageUrl: this.state.imageSrc,\r\n                })\r\n            })\r\n                .then((res) => res.json())\r\n                .then((data) => console.log(data))\r\n                .catch((error) => {\r\n                    this.setState({\r\n                    errorMassage: error.massage,\r\n                    });\r\n                });\r\n            console.log(createPost);\r\n        }\r\n        window.alert('Create post success');\r\n        window.location.href = '/create-post';\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            localStorage.length !== 0 ? (\r\n                <div>\r\n                    <Homescreen/>\r\n                    <h1 className='mt-5' style={{textAlign: 'center'}}><span className= 'badge badge-success'>CREATE NEW POST</span></h1>\r\n                    <div className='row mt-2'>\r\n                        <div className='col-2'></div>\r\n                        <div className='col-8'>\r\n                            <form onSubmit={this.handleFormSubmit}>\r\n                                <div className='form-group'>\r\n                                    <div style={{\r\n                                        position: 'relative',\r\n                                        top: '30px',\r\n                                        textAlign: 'center'\r\n\r\n                                    }}\r\n                                        >Select Image ...\r\n                                    </div>\r\n                                    <input \r\n                                        id='file'\r\n                                        type='file' \r\n                                        accept='image/*'\r\n                                        className='form-control' \r\n                                        style={{\r\n                                            color: \"transparent\",\r\n                                            margin: `0 auto`,\r\n                                            textIndent: '-999em',\r\n                                            zIndex: 10,\r\n                                            height: '50px',\r\n\r\n                                        }}\r\n                                        onChange={this.handleImageChange}\r\n                                        />\r\n                                    {this.state.imageSrc ? (\r\n                                        <div style={{textAlign:'center', marginTop: '5px'}}>\r\n                                            <img style={{height:'300px', width:'auto'}} src={this.state.imageSrc} alt='preview' />\r\n                                        </div>\r\n                                    ) : null}\r\n                                        \r\n                                </div>\r\n                                <div className='form-group'>\r\n                                    <input \r\n                                        className=\"form-control\" \r\n                                        type='text' \r\n                                        placeholder='Enter Title ...'\r\n                                        value={this.state.title}\r\n                                        onChange={this.handleTitleChange}\r\n                                    />\r\n                                    <textarea \r\n                                        className=\"form-control mt-2 mb-2\"\r\n                                        id=\"exampleFormControlTextarea1\" \r\n                                        rows=\"4\"\r\n                                        placeholder=\"Please enter content ...\"\r\n                                        value={this.state.content}\r\n                                        onChange={this.handleContentChange}\r\n                                    ></textarea>\r\n                                    <input \r\n                                        className=\"form-control\" \r\n                                        type='text' \r\n                                        placeholder='Enter Description ...'\r\n                                        value={this.state.description}\r\n                                        onChange={this.handleDescriptionChange}\r\n\r\n                                    />\r\n                                </div>\r\n                                {this.state.errorMassage ? (\r\n                                    <div className=\"alert alert-danger\" role=\"alert\">\r\n                                        {this.state.errorMassage}\r\n                                    </div>\r\n                                ) : null}\r\n                                <div className='form-group'>\r\n                                    <input \r\n                                        type='submit'\r\n                                        value='Create Post'\r\n                                        className='btn btn-primary'\r\n                                    />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        <div className='col-2'></div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                window.location.href = '/'\r\n            )\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Homescreen from './MainScreen';\r\n\r\nexport default class DetailScreen extends Component {\r\n    state = {\r\n        image: []\r\n    };\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        fetch(`http://localhost:3001/api/posts/${this.props.match.params.imageId}`,{\r\n            method: 'GET',\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                this.setState({\r\n                    image: data\r\n                });\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n    handleBack = () => {\r\n        window.history.back();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Homescreen/>\r\n                <div className='container mt-3'>\r\n                    <div className='row'>\r\n                        <div>\r\n                            <button\r\n                                className='btn btn-primary'\r\n                                onClick={this.handleBack}\r\n                            >BACK\r\n                            </button>\r\n                        </div>  \r\n                        <div style={{textAlign: 'center'}} className='col-8 mr-auto ml-auto'>\r\n                            <img\r\n                                className='img-fluid'\r\n                                src={this.state.image.imageUrl}\r\n                                alt={this.state.image.title}\r\n                            />\r\n                            <div>\r\n                                <h4>{this.state.image.title}</h4>\r\n                                <p>{this.state.image.content}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport HomeScreen from './components/HomeScreen';\nimport CreatePost from './components/CreatePost';\nimport MainScreen from './container/MainScreen';\nimport DetailScreen from './container/DetailScreen';\nexport default class App extends Component {\n\n    render() {\n        return ( \n            <div className=\"APP\">\n                <BrowserRouter>\n                    <Route exact path='/' component={MainScreen} />\n                    <Route path='/homescreen' component={HomeScreen} />\n                    <Route path='/images/:imageId' component={DetailScreen} />\n                    <Route path='/create-post' component={CreatePost} />\n                </BrowserRouter>\n            </div>\n        )\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}